+ Adds two numbers
Pops two numbers from the stack, adds them, and pushes the result back on the
stack.
Example: 1 2 +
Result: 3

1+ Increments a number
Pops a number from the stack, adds 1 to it, and pushes the result back on
the stack.
Example: 47 1+
Result: 48

- Subtracts a number from another
Pops two numbers from the stack, subtracts the first to be popped from the
second, and pushes the result back on the stack.
Example: 10 6 -
Result: 4

1- Decrements a number
Pops a number from the stack, subtracts 1 from it, and pushes the result back
on the stack.
Example: 47 1-
Result: 46

neg Negates a number
Pops a number from the stack, subtracts it from 0, and pushes the result back
on the stack.
Example: 47 neg
Result: -47

* Multiplies two numbers
Pops two numbers from the stack, multiplies them, and pushes the result back
on the stack.
Example: 3 2 *
Result: 6

2* Multiplies a number by 2
Pops a number from the stack, multiplies it by 2, and pushes the result back
on the stack.
Example: 3 2*
Result: 6

sqr Multiplies a number by itself
Pops a number from the stack, multiplies it by itself, and pushes the result
back on the stack.
Example: 3 sqr
Result: 9

sqrt Square root
Pops a number from the stack, calculates its square root, and pushes the
result back on the stack.
Example: 81.0 sqrt
Result: 9.0

** Raises a number to a power
Pops two numbers from the stack, raises the second to be popped by the power
of the first to be popped, and pushes the result back on the stack.
Example: 2 15 **
Result: 32768

root Nth root
Pops two numbers from the stack.  The first to be popped is N.  Calculates
the Nth root of the second to be popped, and pushes the result back on the
stack.
Example: 32768.0 15 root
Result: 2.0

/ Divides a number by another
Pops two numbers from the stack, divides the second to be popped by the
first, and pushes the result back on the stack.
Example: 7 2.0 /
Result: 3.5

mod Modulo (remainder)
Pops two numbers from the stack, divides the second to be popped by the
first, and pushes the remainder back on the stack.
Example: 15 4 mod
Result: 3

abs Absolute value
Pops a number from the stack, calculates its absolute value, and pushes the
result back on the stack.
Example: 47 abs
Result: 47
Example: -47 abs
Result: 47

inv Reciprocal
Pops a number from the stack, divides 1.0 by it, and pushes the result back
on the stack.
Example: 4 inv
Result: 0.25

! Factorial
Pops a number from the stack, computes its factorial, and pushes the result
back on the stack.
Example: 7 !
Result: 5040

sum Adds n numbers
Pops a number from the stack, pops that many more numbers from the stack,
adds them up, and pushes the result back on the stack.
Example: 5 5 5 5 3 sum
Result: Leaves 5 15 on the stack

sumall Adds all the numbers on the stack
Pops the entire stack, adds all the numbers, and pushes the result back on
the stack.
Example: 1 3 5 sumall
Result: 9

product Multiplies n numbers
Pops a number from the stack, pops that many more numbers from the stack,
multiplies them together, and pushes the result back on the stack.
Example: 5 5 5 5 3 product
Result: Leaves 5 125 on the stack

productall Multiplies all the numbers on the stack
Pops the entire stack, multiplies all the numbers, and pushes the result back
on the stack.
Example: 2 3 4 productall
Result: 24

log Common logarithm
Pops a number from the stack, calculates its common (base 10) logarithm, and
pushes the result back on the stack.
Example: 10000.0 log
Result: 4.0

log Natural logarithm
Pops a number from the stack, calculates its natural (base e) logarithm, and
pushes the result back on the stack.
Example: e ln
Result: 1.0

e Euler's number/Napier's constant
Pushes e aka Euler's number aka Napier's constant onto the stack.
Example: e
Result: 2.718281828459045
Example: e 4 *
Result: 10.87312731383618

pi Pi
Pushes pi onto the stack.
Example: pi
Result: 3.141592653589793

dtor Converts degrees to radians
Pops a number from the stack.  Takes the popped number to be a number of
degrees.  Pushes the corresponding number of radians back on the stack.
Example: 180 dtor
Result: 3.141592653589793

rtod Converts radians to degrees
Pops a number from the stack.  Takes the popped number to be a number of
radians.  Pushes the corresponding number of degrees back on the stack.
Example: pi 4 * rtod
Result: 720.0

sin Sine
Pops a number from the stack.  Takes the popped number to be a number of
radians.  Calculates the sine and pushes the result back on the stack.
Example: pi 2 / sin
Result: 1.0
Example: 30 dtor sin
Result: 0.49999999999999994 (floats are lovely...)

asin Inverse sine
Pops a number from the stack.  Takes the popped number to be the sine of a
number of radians.  Calculates the inverse sine, yielding radians, and pushes
the result back on the stack.
Example: 1 asin 2 x
Result: 3.141592653589793
Example: 0.5 asin rtod
Result: 30.000000000000004 (floats are lovely...)

cos Cosine
Pops a number from the stack.  Takes the popped number to be a number of
radians.  Calculates the cosine and pushes the result back on the stack.
Example: pi cos
Result: -1.0
Example: 60 dtor cos
Result: 0.5000000000000001 (floats are lovely...)

acos Inverse cosine
Pops a number from the stack.  Takes the popped number to be the cosine of a
number of radians.  Calculates the inverse cosine, yielding radians, and
pushes the result back on the stack.
Example: 1 acos
Result: 3.141592653589793
Example: 0.5 acos rtod
Result: 60.00000000000001 (floats are lovely...)

tan Tangent
Pops a number from the stack.  Takes the popped number to be a number of
radians.  Calculates the tangent and pushes the result back on the stack.
Example: pi 4 / tan
Result: 0.9999999999999999 (floats are lovely...)
Example: 135 dtor tan
Result: -1.0000000000000002

atan Inverse tangent
Pops a number from the stack.  Takes the popped number to be the tangent of a
number of radians.  Calculates the inverse tangent, yielding radians, and
pushes the result back on the stack.
Example: 1 atan 4 *
Result: 3.141592653589793
Example: -1 atan rtod
Result: -45

ftoc Fahrenheit to Celsius
Pops a number from the stack.  Takes the popped number to be a temperature in
degrees Fahrenheit.  Pushes the equivalent temperature in degrees Celsius
onto the stack.
Example: 212 ftoc
Result: 100

ctof Celsius to Fahrenheit
Pops a number from the stack.  Takes the popped number to be a temperature in
degrees Celsius.  Pushes the equivalent temperature in degrees Fahrenheit
onto the stack.
Example: 37.0 ctof
Result: 98.6

& Combines two numbers using bitwise-and.
Pops two numbers from the stack.  Combines them bitwise using the "and"
operator.  Pushes the result back on the stack.
Example: 0b11011 0b10110 & .b
Result: 0b10010

&all Combines the entire stack using bitwise-and.
Pops the entire stack.  Combines all the number bitwise using the "and"
operator.  Pushes the result back on the stack.
Example: 0b11011 0b10110 0b11101 &all .b
Result: 0b10000

| Combines two numbers using bitwise-or.
Pops two numbers from the stack.  Combines them bitwise using the "or"
operator.  Pushes the result back on the stack.
Example: 0b01001 0b10011 | .b
Result: 0b11011

|all Combines the entire stack using bitwise-or.
Pops the entire stack.  Combines all the number bitwise using the "or"
operator.  Pushes the result back on the stack.
Example: 0b00011 0b10000 0 0b01010 |all .b
Result: 0b11011

^ Combines two numbers using bitwise-xor.
Pops two numbers from the stack.  Combines them bitwise using the "xor"
operator.  Pushes the result back on the stack.
Example: 0b01001 0b10011 ^ .b
Result: 0b11010

^all Combines the entire stack using bitwise-xor.
Pops the entire stack.  Combines all the number bitwise using the "xor"
operator.  Pushes the result back on the stack.
Example: 0b00111 0b10000 0 0b01100 ^all .b
Result: 0b11011

. Output the number on the top of the stack
Pops the number on top of the stack and prints it in decimal.
Example: 1 2 .
Result: Prints 2, leaves 1 on the stack
 
.b Output the number on the top of the stack in binary
Pops the number on top of the stack and prints it in binary.
Example: 1 3 .x
Result: Prints 0b11, leaves 1 on the stack
 
.x Output the number on the top of the stack in hex
Pops the number on top of the stack and prints it in hex.
Example: 1 10 .x
Result: Prints 0xa, leaves 1 on the stack

depth Pushes the current size of the stack.
Pushes the current size of the stack onto the stack.
Example 100 200 300 depth
Result: Leaves 100 200 300 4 on the stack

